name: Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  review:
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get the PR diff
        uses: actions/github-script@v7
        id: diff
        with:
          result-encoding: string
          script: |
            const diff_url = context.payload.pull_request.diff_url
            const result = await github.request(diff_url)
            return result.data

      - name: Review code
        id: code-review
        run: |
          # Get the diff
          escaped_diff=$(cat ${{ steps.diff.outputs.raw-diff-path }} | jq -sRr @json | sed -e 's/^"//' -e 's/"$//')

          # Send to OpenAI for review
          response=$(curl -X POST https://api.openai.com/v1/chat/completions \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
              -d '{
                  "model": "gpt-4-turbo-preview",
                  "messages": [
                      {
                          "role": "system",
                          "content": "Review this pull request and suggest improvements. Check for any logical and security concerns with the code. If you do not have any recommendations, respond with \"Looks good to me!\"."
                      },
                      {
                          "role": "user",
                          "content": "```\n'"$escaped_diff"'\n```\n"
                      }
                  ]
              }')

          # Extract the review
          comments=$(echo $response | jq -r '.choices[0].message.content' | jq -sRr @json)

          echo "comments=$(echo $comments)" >> $GITHUB_OUTPUT

      - name: Post review comments
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ${{ steps.code-review.outputs.comments }}
            })
